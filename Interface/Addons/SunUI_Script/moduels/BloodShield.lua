local S, C, L, DB = unpack(SunUI)if DB.MyClass ~= "DEATHKNIGHT" and DB.MyClass ~= "DRUID" then return endlocal Module = LibStub("AceAddon-3.0"):GetAddon("Core"):NewModule("BloodShield")function Module:OnInitialize()	if C["MiniDB"].BloodShield ~= true then return end	local BS_Name	if DB.MyClass == "DRUID" then		BS_Name = GetSpellInfo(62606)	else		BS_Name = GetSpellInfo(77535)	end	local bs = CreateFrame("Frame", nil, UIParent)	bs:SetSize(UnitFrameDB["Height"]*UnitFrameDB["Scale"],UnitFrameDB["Height"]*UnitFrameDB["Scale"])	bs:CreateShadow()	bs:Hide()	bs.Icon = bs:CreateTexture(nil, 'ARTWORK')	bs.Icon:SetPoint("TOPLEFT")	bs.Icon:SetPoint("BOTTOMRIGHT")	bs.Icon:SetTexCoord(.08, .92, .08, .92)	bs.text = bs:CreateFontString(nil, 'OVERLAY')	bs.text:SetFont(DB.Font, UnitFrameDB["FontSize"], "THINOUTLINE")	bs.time = bs:CreateFontString(nil, 'OVERLAY')	bs.time:SetFont(DB.Font, UnitFrameDB["FontSize"], "THINOUTLINE")	bs.time:SetPoint("CENTER")	local function OnUpdate(self, elapsed)		local time = GetTime();		if (time > self.expires) then			self:Hide()			self.text:SetText('')			self.time:SetText('')			self.expires = nil			self:SetScript("OnUpdate", nil)		else			local remaining = self.expires - time			self.time:SetText(tostring(math.floor(remaining)))		end	end	bs:RegisterEvent("UNIT_AURA")	bs:RegisterEvent("PLAYER_ENTERING_WORLD")	bs:SetScript("OnEvent", function(self, event, ...)		if event == "PLAYER_ENTERING_WORLD" then			self:UnregisterEvent("PLAYER_ENTERING_WORLD")					--self:Point("TOPRIGHT", oUF_SunUIPlayer, "BOTTOMRIGHT", -25, -15)			MoveHandle.BloodShield = S.MakeMoveHandle(bs, L["打开坦克护盾监视"], "BloodShield")			self:SetFrameLevel(oUF_SunUIPlayer:GetFrameLevel()+1)			self.text:Point("LEFT", self, "RIGHT", 2, 0)		end				if event == "UNIT_AURA" then			if DB.Role ~= 'Tank' then				if self:IsShown() then self:Hide() end				return			end						if UnitBuff('player', BS_Name) then				local _, _, icon, _, _, _, expires, _, _, _, _, _, _, value = UnitBuff('player', BS_Name)				if value then					self:Show()					self.Icon:SetTexture(icon)					self.text:SetText(S.ShortValue(value))					self.expires = expires					if (expires > 0) then						OnUpdate(self, 0)						self:SetScript("OnUpdate", OnUpdate)					end				end			else				self:Hide()				self.text:SetText('')				self.time:SetText('')				self.expires = nil				self:SetScript("OnUpdate", nil)			end		end	end)	end